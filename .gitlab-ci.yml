image: node:19-alpine3.16

services:
  - name: mongo:6.0
    alias: mongodb

variables:
  MONGO_HOST: mongodb

stages:
  - build
  - test
  - package

build:
  stage: build
  script:
   - cd api
   - npm install
  artifacts:
    paths:
      - api/node_modules
    expire_in: 1 week

validation:
  stage: test
  before_script:
    - cd api
  script:
    - npm run lint
  dependencies:
    - build
  allow_failure:
    exit_codes:
      - 1

api-test:
  stage: test
  before_script:
    - export DIR_STATIC_FILES="../client/"
    - export DATABASE_URL="mongodb://$MONGO_HOST"
    - export PORT=8888
    - export JWT_EXPIRES_IN="30d"  
    - npm install -g nodemon newman
    - cd api
  script:
    - npm run dev > server.log & sleep 10
    - echo "Waiting for API server to start..."
    - >-
        newman run
        -e ../testing/Chas_Challenge.postman_environment.json
        ../testing/Chas_Challenge.postman_collection.json
  needs: []
  dependencies:
    - build
  artifacts:
    paths:
      - api/server.log

package:
  stage: package 
  image: docker:23.0.6
  services:
    - docker:23.0.6-dind-alpine3.17
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    # use previous image as a cache to speedup build process
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    # use the commit sha to tag the image
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  when: manual
